//This container contains all the code that is executing cyclically throughout the game

//Crate spawn script
export Function CYCLIC_CrateSpawn;
var i, j, k, amount;
begin
    for i=1 to position_drop_zones do
    begin
        amount  := Rand(position_drop_zones[i][1],5);
            for j=3 to position_drop_zones[i] do
                if Prob(position_drop_zones[i][2]) then
                    for k=1 to position_drop_zones[i][j] do
                        CreateCratesArea(amount, position_drop_zones[i][j][k], true);
    end;
end;

//Script for spawning humans by drops from EON, the script favors spawning humans for side that has the least
export Function CYCLIC_HumanSpawn;
var i, j, entity, areas, outside, side, arguments, human;
begin
    side_soldier_count  := [[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0]];
    arguments           := [0,0,0,0,0,0,0,0];
    new_character_EON := [0, Rand(1,4), [Rand(8,12), Rand(8,12)], [0,0,0,0], [Rand(0,experience), Rand(0,experience), Rand(0,experience), Rand(0,experience)], 0];
    
    for i=8 downto 1 do 
    begin
        side_soldier_count  := Replace(side_soldier_count, i, Replace(side_soldier_count[i], 2, side_soldiers[i]+0));
        arguments           := Replace(arguments, i, side_soldiers[i]+0);
    end;
    
    for i=8 downto 1 do
        if not side_isalive[i] then
        begin
            side_soldier_count := Delete(side_soldier_count, i);
            arguments := Delete(arguments, i);
        end;
    
    side_soldier_count  := SortListByListAsc(side_soldier_count, arguments);
    
    for i=side_soldier_count+0 downto 1 do
    begin
        if side_soldier_count[i][2]>side_soldier_count[1][2] then
        side_soldier_count := Delete(side_soldier_count, i);
    end;
    
    side    := side_soldier_count[Rand(1,side_soldier_count)][1];
    if side_soldiers[side]>0 then
        entity  := side_soldiers[side][Rand(1,side_soldiers[side])]
    else
    begin
        entity  := FilterAllUnits([[f_side, side],[f_type, 3],[f_btype, 0],[f_or],[f_btype, 1]]);
        entity  := entity[Rand(1,entity)];
    end;
        
    outside := 0;
    areas   := 0;
    
    for i=1 to position_drop_zones do
        for j=1 to position_drop_zones[i][3] do
        begin
            areas := areas+1;
            
            if IsInArea(entity, position_drop_zones[i][3][j]) then
            begin
                human := PrepareCharacters(side, [Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5)], new_character_EON);
                PlaceUnitArea(human, position_drop_zones[i][3][j], true);
                side_soldiers := Replace(side_soldiers, side, side_soldiers[side] ^ human);
                exit;
            end
            else
            begin
                outside := outside+1;
            end;
        end;
            
    if areas=outside then
    begin
        i := Rand(1,position_drop_zones);
        j := Rand(1,position_drop_zones[i][3]);
        human := PrepareCharacters(side, [Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5)], new_character_EON);
        PlaceUnitArea(human, position_drop_zones[i][3][j], true);
        side_soldiers := Replace(side_soldiers, side, side_soldiers[side] ^ human);
    end;
end;
    
//Spawn fluctuation script
export Function CYCLIC_Fluctuation;
var change;
begin
    current_spawn_rate := Rand(-5,5);
    fluctuation_modifier_crates := fluctuation_base_crates*current_spawn_rate;
    fluctuation_modifier_humans := fluctuation_base_humans*current_spawn_rate;
    change := current_spawn_rate - past_spawn_rate;
    
    Case change of
        -10..-6:
        begin
        //KOMUNIKAT O ZNACZNYM ZMNIEJSZENIU DOSTAW
        end;
        
        -5..-1:
        begin
        //KOMUNIKAT O ZMNIEJSZENIU DOSTAW
        end;
        
        0:
        begin
        //BRAK KOMUNIKATU
        end;
        
        1..5:
        begin
        //KOMUNIKAT O ZWIĘKSZENIU DOSTAW
        end;
        
        6..10:
        begin
        //KOMUNIKAT O ZNACZNYM ZWIĘKSZENIU DOSTAW
        end;
    end;
    
    past_spawn_rate := current_spawn_rate;
end;

//Script that verifies if cargo bays with enough requested resources are present in selected transfer zones for each side
export Function CYCLIC_CheckTransportsInZones;
var i, cargo_bays;
begin
    for i=1 to 8 do
    begin
        side_resources_delivered := Replace(side_resources_delivered, i, [0,0,0]);
    
        if not side_zone_locked[i]=0 then
        begin
            cargo_bays := FilterUnitsInArea(team_transfer_zones[Side_Teams[i]][side_chosen_zone[i]],[[f_side,i],[f_type,unit_vehicle],[f_or,[f_weapon,12],[f_weapon,32],[f_weapon,51]],[f_or,[f_and,[f_control,2],[f_linked]],[f_and,[f_control,1],[f_occupied]],[f_control,3]]]);
            
            if not cargo_bays=[] then
            begin
                side_resources_delivered := Replace(side_resources_delivered, i, Replace(side_resources_delivered[i], 1, GetCargo(cargo_bays, mat_cans)));
                side_resources_delivered := Replace(side_resources_delivered, i, Replace(side_resources_delivered[i], 2, GetCargo(cargo_bays, mat_oil)));
                side_resources_delivered := Replace(side_resources_delivered, i, Replace(side_resources_delivered[i], 3, GetCargo(cargo_bays, mat_siberit)));
            end;
            
            if i=Your_Side AND (side_order_type[i]=1 OR side_order_type[i]=2) then
                ToLua('LUA_UpdateTransferResources('&side_resources_delivered[i][1]&','&side_resources_delivered[i][2]&','&side_resources_delivered[i][3]&','&0&','&side_order_type[i]&');');
            
            if i=Your_Side AND side_order_type[i]=3 then
                ToLua('LUA_UpdateTransferResources('&0&','&0&','&side_resources_delivered[i][3]&'+'&team_siberite_stocked[Side_Teams[i]]&','&victory_cond&','&side_order_type[i]&');');
            
            if side_resources_delivered[i][1]>=side_pending_order[i][1] AND side_resources_delivered[i][2]>=side_pending_order[i][2] AND side_resources_delivered[i][3]>=side_pending_order[i][3] AND i=Your_Side then
                ToLua('LUA_CanSendShipment();')
            else
                ToLua('LUA_CannotSendShipment();');
        end;
    end;
end;

//Script that spawns ordered reinforcements for given side after the time has passed
export Function CYCLIC_FinalizeTransfer(side,in1,in2,in3);
var human, i, bulk, crates, oil, siberite;
begin
    SetCargo(side_units_outside[side], mat_cans, 0);
    crates  := in1;
    oil     := in2;
    siberite:= in3;
    
    Case side_order_type[side] of
        1:
        begin
            for i=1 to side_reinforcement_amount[side] do
            begin
                new_character_reinforcements := [0, 1, [Rand(8,12), Rand(8,12)], [0,0,0,0], [Rand(0,experience), Rand(0,experience), Rand(0,experience), Rand(0,experience)], 0];
                human := PrepareCharacters(side, [Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5), Rand(0,5)], new_character_reinforcements);
                PlaceUnitArea(human, side_chosen_zone[side], false);
            end;
            
            for i in side_units_outside[side] do
            begin
                bulk := FillUpVehicles(i,crates,oil,siberite);
                crates := bulk[2];
                oil := bulk[3];
                siberite := bulk[4];
                SetDir(i,RotateUnit(GetDir(i),3));
                PlaceUnitArea(bulk[1], side_chosen_zone[side], false);
            end;
        end;
        
        2:
        begin
            side_tech_lvl := Replace(side_tech_lvl, side, side_tech_lvl[side]+1);
            TechUpgrade(side_tech_lvl[side], Side_Nations[side], side);
            if side=Your_Side then
                ToLua('LUA_UpdateSideInterface('&side&','&side_tech_lvl[side]&');');
                
            if IAmSpec then
                ToLua('LUA_UpdateSpecInterface('&side&','&side&','&side_tech_lvl[side]&');');   
            
            for i in side_units_outside[side] do
            begin
                bulk := FillUpVehicles(i,crates,oil,siberite);
                crates := bulk[2];
                oil := bulk[3];
                siberite := bulk[4];
                SetDir(i,RotateUnit(GetDir(i),3));
                PlaceUnitArea(bulk[1], side_chosen_zone[side], false);
            end;
        end;
        
        3:
        begin
            team_siberite_stocked := Replace(team_siberite_stocked, Side_Teams[side], team_siberite_stocked[Side_Teams[side]] + side_resources_delivered[side][3]);
            RaiseSailEvent(67);
            siberite:= 0;           
            
            for i in side_units_outside[side] do
            begin
                bulk := FillUpVehicles(i,crates,oil,siberite);
                crates := bulk[2];
                oil := bulk[3];
                siberite := bulk[4];
                SetDir(i,RotateUnit(GetDir(i),3));
                PlaceUnitArea(bulk[1], side_chosen_zone[side], false);
            end;
        end;
    end;
    
    side_transfer_pending := Replace(side_transfer_pending, side, 0);
    ToLua('LUA_BackToMainSideInterface();');
end;
