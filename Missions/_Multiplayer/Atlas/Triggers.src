//This container contains all the code that is executed when a certain trigger is set off

//Naming a depot when it's being built
on BuildingStarted(b,u) do
begin
    if GetBType(b) in [b_depot, b_warehouse] then
    begin
        SetBName(b, '@' & GetSide(b));
        if GetSide(b)=Your_Side then
            if side_depots[GetSide(b)]+0=0 then
                ToLua('LUA_IsDepot();');
                if side_tech_lvl[GetSide(b)]=4 then
                    ToLua('LUA_SideTechMax()');
        side_depots := Replace(side_depots, GetSide(b), side_depots[GetSide(b)] ^ b);
    end;
end;

//Naming a depot when it's being captured
on BuildingCaptured(b,o,e) do
begin
    if GetBType(b) in [b_depot, b_warehouse] then
    begin
        SetBName(b, '@' & GetSide(b));
        side_depots := Replace(side_depots, GetSide(o), side_depots[GetSide(o)] diff b);
        if GetSide(b)=Your_Side then
        begin
            if side_depots[GetSide(b)]+0=0 then
            begin
                ToLua('LUA_IsDepot();');
                if side_tech_lvl[GetSide(b)]=4 then
                    ToLua('LUA_SideTechMax()');
            end;
        end;
        if GetSide(o)=Your_Side then
            if side_depots[GetSide(o)]+0=0 then
                ToLua('LUA_NoDepot();');
        side_depots := Replace(side_depots, GetSide(b), side_depots[GetSide(b)] ^ b);
    end;
end;

//Side lost a soldier
on UnitDestroyed(i) do
var side;
begin
    if GetType(i)=1 then
    begin
        side            := GetSide(i);
        side_soldiers   := Replace(side_soldiers, side, side_soldiers[side] diff i);
        DidPlayerLose(side);
    end;
    
    if GetBType(i) in [b_depot, b_warehouse] then
        side_depots := Replace(side_depots, GetSide(i), side_depots[GetSide(i)] diff i);
        if GetSide(i)=Your_Side then    
            if side_depots[GetSide(i)]+0=0 then
                ToLua('LUA_NoDepot();');
end;

//SAIL events
on SailEvent(ID) do
var i,j,lost;
begin
    Case ID of
        66: //Game ending conditions for 2 team deathmatch
        begin
            for i=1 to Teams do
            begin
                lost := 0;
                for j in Teams[i] do
                    if side_isalive[j]=0 then
                        lost := lost+1;
                
                if lost=Teams[i]+0 then
                    if Your_Side=9 or Your_Side in Teams[i] then
                    begin
                        YouLostInMultiplayer;
                        ToLua('EndGame();');
                    end
                    else
                    begin
                        YouWinInMultiplayer;
                        ToLua('EndGame();');
                    end
                else
                    Continue
            end;
        end;
        
        67: //Game ending due to team collecting required siberite
        begin
            if not victory_cond=0 then
            begin
                for i=1 to Teams do
                begin
                    if team_siberite_stocked[i]>=victory_cond then
                        if Your_Side in Teams[i] then
                        begin
                            YouWinInMultiplayer;
                            ToLua('EndGame();');
                        end
                        else
                        begin
                            YouLostInMultiplayer;
                            ToLua('EndGame();');
                        end;
                end;
            end;
        end;
    end;
end;

//LUA events
on CustomCommand(side, ComID, order, reserved1, reserved2, reserved3) do
var i;
begin
    Case ComID of
        201: //Player checking the next technological upgrade requirements
        begin
            if side=Your_Side then
                ToLua('LUA_UpdateUpgradeCost('&cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][1]&','&cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][2]&','&cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][3]&');');
        end;
        
        202: //Player opening the reinforcements window
        begin
            if side_reinforcement_amount[side]<0 or side_reinforcement_amount[side]>side_reinforcement_cap[side] then
                side_reinforcement_amount := Replace(side_reinforcement_amount, side, 1);
        
            if side=Your_Side then
                ToLua('LUA_UpdateReinforceCost('&side_reinforcement_amount[side]&'*'&cost_per_human[reinforce_cost]&','&0&','&0&','&side_reinforcement_amount[side]&');');
        end;
        
        2020: //Player decreasing the soldier amount in reinforcement window
        begin
            if side_reinforcement_amount[side]>1 then
                side_reinforcement_amount := Replace(side_reinforcement_amount, side, side_reinforcement_amount[side]-1);
            
            if side=Your_Side then
                ToLua('LUA_UpdateReinforceCost('&side_reinforcement_amount[side]&'*'&cost_per_human[reinforce_cost]&','&0&','&0&','&side_reinforcement_amount[side]&');');
        end;
            
        2021: //Player increasing the soldier amount in reinforcement window
        begin
            if side_reinforcement_amount[side]<side_reinforcement_cap[side] then
                side_reinforcement_amount := Replace(side_reinforcement_amount, side, side_reinforcement_amount[side]+1);
            
            if side=Your_Side then
                ToLua('LUA_UpdateReinforceCost('&side_reinforcement_amount[side]&'*'&cost_per_human[reinforce_cost]&','&0&','&0&','&side_reinforcement_amount[side]&');');
        end;
        
        203: //Player opening siberite transfer window
        begin
            if side=Your_Side then
                ToLua('LUA_UpdateSiberiteSent('&team_siberite_stocked[Side_Teams[side]]&','&victory_cond&');');
        end;
        
        204: //Player confirming the upgrade/reinforcement/siberite transfer declaration
        begin
            Case order of
                1: //Reinforcements
                begin
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 1, side_reinforcement_amount[side]*cost_per_human[reinforce_cost]));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 2, 0));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 3, 0));
                    if side=Your_Side then
                    begin
                        ToLua('LUA_UpdateTransferResources('&side_pending_order[side][1]&','&side_pending_order[side][2]&','&side_pending_order[side][3]&','&0&','&0&');');
                        ToLua('LUA_OrderIssued();');
                        ToLua('LUA_UpdateTransferResources('&0&','&0&','&0&','&0&','&order&');');
                    end;
                end;
                
                2: //Technology upgrade
                begin
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 1, cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][1]));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 2, cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][2]));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 3, cost_per_upgrade[side_tech_lvl[side]+1][reinforce_cost][3]));
                    if side=Your_Side then
                    begin
                        ToLua('LUA_UpdateTransferResources('&side_pending_order[side][1]&','&side_pending_order[side][2]&','&side_pending_order[side][3]&','&0&','&0&');');
                        ToLua('LUA_OrderIssued();');    
                        ToLua('LUA_UpdateTransferResources('&0&','&0&','&0&','&0&','&order&');');
                    end;
                end;
                
                3: //Siberite transfer
                begin
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 1, 0));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 2, 0));
                    side_pending_order := Replace(side_pending_order, side, Replace(side_pending_order[side], 3, 10));
                    if side=Your_Side then
                    begin
                        ToLua('LUA_UpdateTransferResources('&0&','&0&','&team_siberite_stocked[Side_Teams[side]]&','&victory_cond&','&0&');');
                        ToLua('LUA_OrderIssued();');
                    end;
                end;
            end;
            
            if side=Your_Side then
            begin
                ToLua('LUA_CannotSendShipment();');
                ToLua('LUA_UpdateTransferZone('&team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]]&')');
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],1);
            end;
            
            side_order_type := Replace(side_order_type, side, order);
        end;
        
        2040: //Player choosing the transfer zone
        begin
            side_zone_locked := Replace(side_zone_locked, side, 1);
            if side=Your_Side then
            begin
                ToLua('LUA_ChosenTransferZone();');
                ToLua('LUA_UpdateTransferZone('&team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]]&')');
            end;
        end;
        
        2041: //Player scrolling through zones (left)
        begin
            if side=Your_Side then
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],0);
                
            side_chosen_zone := Replace(side_chosen_zone, side, side_chosen_zone[side]-1);
            
            if side_chosen_zone[side]<1 then
                side_chosen_zone := Replace(side_chosen_zone, side, team_transfer_zones[Side_Teams[side]]+0);
            
            if side=Your_Side then
            begin
                ToLua('LUA_UpdateTransferZone('&team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]]&')');
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],1);
            end;
        end;
        
        2042: //Player scrolling through zones (right)
        begin
            if side=Your_Side then
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],0);
                
            side_chosen_zone := Replace(side_chosen_zone, side, side_chosen_zone[side]+1);
            
            if side_chosen_zone[side]>team_transfer_zones[Side_Teams[side]]+0 then
                side_chosen_zone := Replace(side_chosen_zone, side, 1);
            
            if side=Your_Side then
            begin
                ToLua('LUA_UpdateTransferZone('&team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]]&')');
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],1);
            end;
        end;
        
        205: //Player sending a transport when required resources reach the transfer zone
        begin
            side_units_outside := Replace(side_units_outside,side,FilterUnitsInArea(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],[[f_side,side],[f_type,unit_vehicle],[f_or,[f_weapon,12],[f_weapon,32],[f_weapon,51]],[f_or,[f_and,[f_control,2],[f_linked]],[f_and,[f_control,1],[f_occupied]],[f_control,3]]]));
            for i in side_units_outside[side] do
                RemoveUnit(i);
            
            side_resources_remaining := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 1, side_resources_delivered[side][1] - side_pending_order[side][1]));
            side_resources_remaining := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 2, side_resources_delivered[side][2] - side_pending_order[side][2]));
            side_resources_remaining := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 3, side_resources_delivered[side][3] - side_pending_order[side][3]));
            if side_order_type[side]=3 then
                side_resources_remaining := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 3, side_resources_delivered[side][3]));
            
            side_transfer_clocks  := Replace(side_transfer_clocks, side, tick + 3$0);
            side_transfer_pending := Replace(side_transfer_pending, side, 1);
            
            if side=Your_Side then
            begin
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],0);
                ToLua('LUA_WaitingTransfer();');
            end;
        end;
        
        300: //Player lost a depot
        begin
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 1, 0));
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 2, 0));
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 3, 0));
            side_zone_locked            := Replace(side_zone_locked, side, 0);
            
            if side=Your_Side then
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],0);
        end;
        
        301: //Player lost or order has been completed/cancelled
        begin
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 1, 0));
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 2, 0));
            side_pending_order          := Replace(side_pending_order, side, Replace(side_pending_order[side], 3, 0));
            side_zone_locked            := Replace(side_zone_locked, side, 0);
            side_transfer_pending       := Replace(side_transfer_pending, side, 0);
            side_transfer_clocks        := Replace(side_transfer_clocks, side, 0$0);
            side_resources_remaining    := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 1, 0));
            side_resources_remaining    := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 2, 0));
            side_resources_remaining    := Replace(side_resources_remaining, side, Replace(side_resources_remaining[side], 3, 0));
            side_units_outside          := Replace(side_units_outside, side, 0);
            
            if side=Your_Side then
                SetAreaMapShow(team_transfer_zones[Side_Teams[side]][side_chosen_zone[side]],0);
        end;
    end;
end;
